"HALE60_Male_2005",
"HALE60_Male_2000",
"HALE60_Female_2016",
"HALE60_Female_2015",
"HALE60_Female_2010",
"HALE60_Female_2005",
"HALE60_Female_2000")
names(LifeExpectancy) <- c("Country", namelist)
glimpse(LifeExpectancy)
LifeExpectancyTidy <- LifeExpectancy %>%
pivot_longer(cols = all_of(namelist), names_to = "type", values_to = "count") %>%
separate(col = "type", into = c("HALE", "sex", "year"), sep = "_", convert = TRUE) %>%
pivot_wider(names_from = HALE, values_from =  count)
LifeExpectancyTidy %>%
head(10)
world <- ne_countries(scale = "medium", returnclass = "sf")
countries <- read_csv("WHO_metadata.csv", col_names = FALSE)
names(countries) <- c("type", "iso", "Country")
LifeExpectancyCountries <- LifeExpectancyTidy %>%
filter(year == "2016", sex == "Both sexes") %>%
left_join(countries, by=c("Country" = "Country")) %>%
select(iso, Country, sex, year, HALEbirth, HALE60)
WorldLifeExpectancy <- world %>%
left_join(LifeExpectancyCountries, by=c("iso_a3" = "iso"))
my_map_theme <- function(){
theme(panel.background=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())
}
ggplot(WorldLifeExpectancy) +
geom_sf(aes(fill = HALEbirth), color = "black")+
scale_fill_continuous("Healthy Life Expectancy at Birth (years)", low="blue", high="purple") +
my_map_theme() +
labs(title = "Healthy Life Expectancy at Birth in 2016")
my_map_theme <- function(){
theme(panel.background=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())
}
ggplot(WorldLifeExpectancy) +
geom_sf(aes(fill = HALEbirth), color = "black")+
scale_fill_continuous("Healthy Life Expectancy at Birth (years)", low="red", high="blue") +
my_map_theme() +
labs(title = "Healthy Life Expectancy at Birth in 2016")
p <- ggplot(WorldLifeExpectancy) +
geom_sf(aes(fill = HALEbirth), color = "black")+
scale_fill_continuous("Healthy Life Expectancy at Birth (years)", low="red", high="blue") +
my_map_theme() +
labs(title = "Healthy Life Expectancy at Birth in 2016")
ggplotly(p)
install.packages('plotly')
library(tidyverse)
library(openintro)
library(readxl)
library("rnaturalearth")
library("rnaturalearthdata")
library(plotly)
p <- ggplot(WorldLifeExpectancy) +
geom_sf(aes(fill = HALEbirth), color = "black")+
scale_fill_continuous("Healthy Life Expectancy at Birth (years)", low="red", high="blue") +
my_map_theme() +
labs(title = "Healthy Life Expectancy at Birth in 2016")
ggplotly(p)
view(WorldLifeExpectancy)
p <- ggplot(WorldLifeExpectancy) +
geom_sf(aes(fill = HALEbirth, text=paste(name, "\n healthy life expectancy: ",HALEbirth)), color = "black")+
scale_fill_continuous("Healthy Life Expectancy at Birth (years)", low="red", high="blue") +
my_map_theme() +
labs(title = "Healthy Life Expectancy at Birth in 2016")
ggplotly(p, tooltip = c("text"))
LifeExpectancyTidy <- LifeExpectancy %>%
pivot_longer(cols = all_of(namelist), names_to = "type", values_to = "count") %>%
separate(col = "type", into = c("HALE", "sex", "year"), sep = "_", convert = TRUE) %>%
pivot_wider(names_from = HALE, values_from =  count)
LifeExpectancyTidy %>%
sort(desc(year))
LifeExpectancyTidy <- LifeExpectancy %>%
pivot_longer(cols = all_of(namelist), names_to = "type", values_to = "count") %>%
separate(col = "type", into = c("HALE", "sex", "year"), sep = "_", convert = TRUE) %>%
pivot_wider(names_from = HALE, values_from =  count)
LifeExpectancyTidy %>%
sort(desc(year)) %>%
head(10)
LifeExpectancyTidy <- LifeExpectancy %>%
pivot_longer(cols = all_of(namelist), names_to = "type", values_to = "count") %>%
separate(col = "type", into = c("HALE", "sex", "year"), sep = "_", convert = TRUE) %>%
pivot_wider(names_from = HALE, values_from =  count)
LifeExpectancyTidy %>%
sort(desc(year)) %>%
head(10)
LifeExpectancyTidy <- LifeExpectancy %>%
pivot_longer(cols = all_of(namelist), names_to = "type", values_to = "count") %>%
separate(col = "type", into = c("HALE", "sex", "year"), sep = "_", convert = TRUE) %>%
pivot_wider(names_from = HALE, values_from =  count)
LifeExpectancyTidy %>%
sort(desc("year")) %>%
head(10)
LifeExpectancyTidy <- LifeExpectancy %>%
pivot_longer(cols = all_of(namelist), names_to = "type", values_to = "count") %>%
separate(col = "type", into = c("HALE", "sex", "year"), sep = "_", convert = TRUE) %>%
pivot_wider(names_from = HALE, values_from =  count)
LifeExpectancyTidy %>%
arrange(desc(year)) %>%
head(10)
world <- ne_countries(scale = "medium", returnclass = "sf")
library(tidyverse)
library(openintro)
library("rnaturalearth")
library("rnaturalearthdata")
library(plotly)
coviddata <- read_csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv")
view(coviddata)
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases), totaldeaths = sum(total_deaths), totalpop = sum(population)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop)
view(graphdata)
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop)
view(graphdata)
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent, na.rm = TRUE) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop)
view(graphdata)
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop)
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop)
view(graphdata)
graphdata <- coviddata %>%
filter(date == "2021-11-18", is.na(continent))
view(graphdata)
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop)
view(graphdata)
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop) %>%
[-c(7),]
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop) %>%
graphdata[-c(7),]
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop) %>%
slice(-c(7))
view(graphdata)
p <- ggplot(graphdata) +
geom_col(x = continent, y = caserate*1000000)
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop) %>%
slice(-c(7))
p <- ggplot(graphdata) +
geom_col(x = continent, y = caserate*1000000)
library(tidyverse)
library(openintro)
library(plotly)
coviddata <- read_csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv")
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(caserate = totalcases/totalpop, deathrate = totaldeaths/totalpop) %>%
slice(-c(7))
p <- ggplot(graphdata) +
geom_col(x = continent, y = caserate*1000000)
p <- ggplot(graphdata) +
geom_col(mappin = aes(x = continent, y = caserate*1000000))
p <- ggplot(graphdata) +
geom_col(mappin = aes(x = continent, y = caserate*1000000))
p <- ggplot(graphdata) +
geom_col(mappin = aes(x = continent, y = caserate*1000000))
p
p
p <- ggplot(graphdata) +
geom_col(mappin = aes(x = continent, y = total_cases_per_million)
p <- ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = total_cases_per_million)
p <- ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = total_cases_per_million))
p
graphdata <- coviddata %>%
filter(date == "2021-11-18") %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
slice(-c(7))
p <- ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = total_cases_per_million))
p
p <- ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = total_cases_per_million), fill = "blue")
p
p <- ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = total_cases_per_million), fill = continent)
p <- ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = total_cases_per_million, colour = continent))
p
p <- ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = total_cases_per_million, fill = continent))
p
p <- ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = total_cases_per_million, fill = continent), show.legend = FALSE)
p
shiny::runApp('aa Data Sci/CovidByContinents')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/Covid_Map_App/covidmap_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
barplot(choosevar(total_cases_per_million, 2021-11-18))
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
barplot(choosevar(total_cases_per_million, 2021-11-18))
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
barplot(choosevar(varname = total_deaths_per_million, choosedate = 2021-11-05, data = coviddata))
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(plotstat, data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
barplot(choosevar(varname = total_deaths_per_million, choosedate = 2021-11-05, data = coviddata))
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar(varname = total_deaths_per_million, choosedate = 2021-11-05, data = coviddata))
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar(varname = total_deaths_per_million, choosedate = 2021-11-05, data = coviddata)
view(p)
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar(total_deaths_per_million, 2021-11-05,coviddata)
view(p)
library(tidyverse)
library(openintro)
library(plotly)
coviddata <- read_csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv")
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar(total_deaths_per_million, 2021-11-05,coviddata)
view(p)
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar("total_deaths_per_million", "2021-11-05",coviddata)
view(p)
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar("total_deaths_per_million", "2021-11-05",coviddata)
barplot(p)
view(p)
barplot(p)
p$plotstat
plotstat
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(graphdata) +
geom_col(mapping = aes(x = data$continent, y = data$plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar("total_deaths_per_million", "2021-11-05",coviddata)
barplot(p)
barplot(p)
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('covidbycontinents_app.R')
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(data) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar("total_deaths_per_million", "2021-11-05",coviddata)
barplot(p)
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(data) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar("total_deaths_per_million", "2021-11-05",coviddata)
barplot(p)
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(data) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
p <- choosevar("total_deaths_per_million", "2021-11-05",coviddata)
view(P)
view(p)
barplot(p)
choosevar <- function(varname, choosedate, data = coviddata){
varname1 <- enquo(varname)
data %>%
filter(date == choosedate) %>%
group_by(continent) %>%
summarize(totalcases = sum(total_cases, na.rm = TRUE), totaldeaths = sum(total_deaths, na.rm = TRUE), totalpop = sum(population, na.rm = TRUE)) %>%
mutate(total_cases_per_million = totalcases/totalpop*1000000, total_deaths_per_million = totaldeaths/totalpop*1000000) %>%
select(continent, plotstat = !!varname1) %>%
slice(-c(7))
}
barplot <- function(data){
ggplot(data) +
geom_col(mapping = aes(x = continent, y = plotstat, fill = continent), show.legend = FALSE)
}
barplot(choosevar("total_deaths_per_million", "2021-11-05",coviddata))
barplot(choosevar("total_deaths_per_million", "2021-11-05",coviddata))
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
view(coviddata)
runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
library(shiny); runApp('aa Data Sci/CovidByContinents/covidbycontinents_app.R')
runApp('aa Data Sci/Covid_Map_App/covidmap_app.R')
